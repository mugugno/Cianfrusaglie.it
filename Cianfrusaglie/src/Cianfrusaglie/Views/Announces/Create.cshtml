@using System.Security.Cryptography
@model Announce

@{
    ViewData[ "Title" ] = "CreateDescriptionAnnounce";
}

@functions
{

    private IEnumerable< Category > GetMacroCategories() {
        for( int i = 0; i < ( ViewData[ "numberOfMacroCategories" ] as int? ?? 0 ); i++ ) {
            var categories = ViewData[ "formMacroCategories" ] as List< Category >;
            if( categories != null && categories[ i ].OverCategory == null )
                yield return categories[ i ];
        }
    }


    private IEnumerable< Category > GetCategories( Category macro ) {
        for( int j = 0; j < ( ViewData[ "numberOfMacroCategories" ] as int? ?? 0 ); j++ ) {
            var subCat = ViewData[ "formMacroCategories" ] as List< Category >;
            if( subCat != null && subCat[ j ].OverCategory != null && subCat[ j ].OverCategory.Name == macro.Name )
                yield return subCat[ j ];
        }
    }

    private IEnumerable< FormField > GetFormFields() {
        foreach( FormField field in (List< FormField >) ViewData[ "formFields" ] ) {
            yield return field;
        }
    }

    private string StringifyCategoriesFromFormField( int formFieldId ) {
        string result = "";
        var dictionary = ViewData[ "formField2CategoriesDictionary" ] as Dictionary< int, List< Category > >;
        if( dictionary == null )
            return result;

        foreach( Category category in dictionary[ formFieldId ] ) {
            result += category.Id + " ";
        }
        return result;
    }

}
<div class="panel panel-default" >
    <div class="panel-body" >
        <div class="row" >
            <div class="col-md-6" >
                <div class="panel-group" id="panel-423221" >
                    @foreach( Category macroCategory in GetMacroCategories() ) {
                        <div class="panel panel-default" >
                            <div class="panel-heading" >
                                <a class="panel-title collapsed" data-toggle="collapse" data-parent="#panel-423221" href="#category-@macroCategory.Id" >@macroCategory.Name</a>
                            </div>
                            <div id="category-@macroCategory.Id" class="panel-collapse collapse" >
                                <div class="panel-body" >
                                    <div class="form-group" >

                                        <div class="col-md-4" >
                                            @foreach( Category category in GetCategories( macroCategory ) ) {
                                                <div class="checkbox" >
                                                    <label for="@category.Id" >
                                                        <input class="category-checkboxes" type="checkbox" name="category" id="@category.Id" value="@category.Id" onchange="setFieldsVisibility();" />
                                                        @category.Name
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }


                </div>
            </div>
            <div class="col-md-6" >
                <div class="panel panel-default" >
                    <div class="panel-body" >
                        <form role="form" >
                            @foreach( FormField field in GetFormFields() ) {
                                <div class="form-group category-form-fields @StringifyCategoriesFromFormField( field.Id )" id="field-form-group-@field.Id" style="display:none" >
                                    <label for="field-@field.Id" >
                                        @field.Name
                                    </label>

                                    <input type="text" class="form-control" id="field-@field.Id" > @* TODO  type=@field.Type *@
                                </div>
                            }


                            <button class="btn btn-default" type="submit" >
                                Submit
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function setFieldsVisibility() {
        var checkboxesArray = document.getElementsByClassName("category-checkboxes");
        var allFormFieldsArray = document.getElementsByClassName("category-form-fields");
        for( var i = 0; i < allFormFieldsArray.length; i++ )
            allFormFieldsArray[ i ].style.display = "none";
        for( var i = 0; i < checkboxesArray.length; i++ ) {
            var checkbox = checkboxesArray[ i ];
            if( checkbox.checked ) {
                var categoryFormFieldsArray = document.getElementsByClassName(checkbox.id);
                for( var j = 0; j < categoryFormFieldsArray.length; j++ )
                    categoryFormFieldsArray[ j ].style.display = "block";
            }
        }
    }
</script>
