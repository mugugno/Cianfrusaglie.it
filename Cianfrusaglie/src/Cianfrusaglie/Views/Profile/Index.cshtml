@using System.Security.Claims
@model Cianfrusaglie.Models.User

@{
    ViewData["Title"] = "Profilo di " + Model.UserName;
}
@functions{

    public List< FeedBack > GetLastFeedBacks() { return ViewData[ "lastFeedbacks" ] as List< FeedBack >; }
    public List< FeedBack > GetBestFeedBacks() { return ViewData[ "bestFeedbacks" ] as List< FeedBack >; }
    public List< FeedBack > GetWorstFeedBacks() { return ViewData[ "worstFeedbacks" ] as List< FeedBack >; }
}

<div class="container-fluid" >
    <div class="col-md-2" >
    </div>
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-body">

                <div class="row">
                    <div class="col-md-4">
                        <div class="photo profile-avatar panel panel-default">
                            <img class="img-responsive" src=@Model.ProfileImageUrl />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <h2>Profilo di @Model.UserName</h2>
                        <!-- Stelline col rating dell'utente (style.css)-->
                        <div class="star-container">
                            <div class="star-shape">
                                <svg viewbox="0 0 61 19">
                                    <defs>
                                        <mask id="starmask" x="0" y="0" width="100" height="100">
                                            <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
                                            <text text-anchor="middle" x="50%" y="70%" dy="1"> &#x2605;&#x2605;&#x2605;&#x2605;&#x2605;</text>
                                        </mask>
                                    </defs>
                                    <rect x="0" y="0" width="100%" height="100%" mask="url(#starmask)" fill="#fff" fill-opacity="1" />
                                    <text text-anchor="middle" x="50%" y="70%" dy="1" color="black"> &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;</text>
                                </svg>
                            </div>
                            @{ string starWidth = ( (int) ( 20 * Model.FeedbacksMean ) ) + "%"; }
                            <div class="star-colorbar" style="width: @starWidth">
                            </div>
                        </div>
                        <!-- Fine Stelline col rating dell'utente-->
                        @($"{Model.FeedbacksMean:N1}") su 5 (@Model.FeedbacksCount feedback)
                        <br>
                        <h4>
                            @Model.Name
                            @Model.Surname
                        </h4>
                        @if( !User.GetUserId().Equals( Model.Id ) ) {
                            <a class="btn btn-info btn-det" href="~/Messages/Details/?id=@Model.Id" >Contatta</a>
                        }
                    </div>
                    <div class="col-md-2">
                        @if (User.GetUserId().Equals(Model.Id))
                        {
                            <div style="font-size: 1.2em; margin-top: 1em;">
                                <a href="~/Preferences/Index" ><div class="glyphicon glyphicon-cog"> </div> Cambia le mie preferenze</a>
                            </div>
                        }

                    </div>
                </div>


            </div>
        </div>












    <h3 style="text-align: center" >Feedback ricevuti</h3>

        @if( !Model.ReceivedFeedBacks.Any() ) {
            <br />
            <h4 style="text-align: center" >Non ci sono ancora feedback per questo utente!</h4>
        } else {




            <h3 >I migliori 3</h3>
            if (!GetBestFeedBacks().Any())
            {
                <h4 style="text-align: center">Non ci sono abbastanza feedback utili per questo utente!</h4>
            }
            else
            {
                foreach (var feedback in GetBestFeedBacks())
                {
                    <div class="panel panel-default">
                        <div class="panel-body" style="padding-bottom: 7px;">
                            <div class="col-md-1">
                                <div class="photo message-avatar panel panel-default">
                                    <img class="img-responsive" src=@feedback.Author.ProfileImageUrl />
                                </div>
                            </div>
                            <div class="col-md-2" style="margin-top: 0.8em;">
                                <span style="word-wrap :break-word;word-break:break-word"> <a href="~/Profile/Index?userId=@feedback.AuthorId">@feedback.Author.UserName</a> </span>
                                <!-- Stelline col rating dell'utente (style.css)-->
                                <div class="star-container">
                                    <div class="star-shape">
                                        <svg viewbox="0 0 61 19">
                                            <defs>
                                                <mask id="starmask" x="0" y="0" width="100" height="100">
                                                    <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
                                                    <text text-anchor="middle" x="50%" y="70%" dy="1"> &#x2605;&#x2605;&#x2605;&#x2605;&#x2605;</text>
                                                </mask>
                                            </defs>
                                            <rect x="0" y="0" width="100%" height="100%" mask="url(#starmask)" fill="#fff" fill-opacity="1" />
                                            <text text-anchor="middle" x="50%" y="70%" dy="1" color="black"> &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;</text>
                                        </svg>
                                    </div>
                                    @{ string starWidth2 = ((int)(20 * feedback.Author.FeedbacksMean))+"%"; }
                                    <div class="star-colorbar" style="width: @starWidth2">
                                    </div>
                                </div>
                                <!-- Fine Stelline col rating dell'utente-->

                            </div>
                            <div class="col-md-8">
                                <span style="font-size: 0.7em;">Inviato il: @feedback.DateTime.ToString("dd MMMM yyyy")</span>

                                <span style="float: right; margin-top: -1em;">
                                    <span>Voto:</span>
                                    @for (var i = 0; i < feedback.Vote; i++)
                                    {
                                        <span style="color: orange; font-size: 2em;">&#x2605;</span>
                                    }
                                </span>

                                <div class="panel panel-default">



                                    <div class="panel-body">
                                        @feedback.Text
                                    </div>
                                </div>

                                <div style="font-size: 0.7em; float: right; margin-top: -10px;">Sei d'accordo? Vota!</div>
                            </div>

                            <div class="col-md-1">
                                @if (feedback.AuthorId.Equals(User.GetUserId()) || feedback.ReceiverId.Equals( User.GetUserId() ))
                                {
                                    <!-- l'autore sono io oppure sono io il destinatario, non posso autovotarmi, tutti e due colorati -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up"></div>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down"></div>

                                }
                                else if (!feedback.UserFeedbackScores.Any())
                                {
                                    <!-- caso normale non colorati nessuno dei due -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up"></div>
                                    </a>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down"></div>
                                    </a>

                                }
                                else if (feedback.UserFeedbackScores.First().Useful)
                                {
                                    <!-- colora di hover perenne il thumb UP -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up"></div>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down"></div>
                                    </a>
                                }
                                else
                                {
                                    <!-- colora di hover perenne il thumb DOWN -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up"></div>
                                    </a>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down"></div>

                                }

                            </div>

                        </div>
                    </div>
                                            }
                                        }

            <h3>I peggiori 3</h3>
            if (!GetWorstFeedBacks().Any())
            {
                <h4 style="text-align: center">Non ci sono abbastanza feedback utili per questo utente!</h4>
            }
            else
            {
                foreach (var feedback in GetWorstFeedBacks())
                {
                    <div class="panel panel-default">
                        <div class="panel-body" style="padding-bottom: 7px;">
                            <div class="col-md-1">
                                <div class="photo message-avatar panel panel-default">
                                    <img class="img-responsive" src=@feedback.Author.ProfileImageUrl />
                                </div>
                            </div>
                            <div class="col-md-2" style="margin-top: 0.8em;">
                                <span style="word-wrap :break-word;word-break:break-word"> <a href="~/Profile/Index?userId=@feedback.AuthorId">@feedback.Author.UserName</a> </span>
                                <!-- Stelline col rating dell'utente (style.css)-->
                                <div class="star-container">
                                    <div class="star-shape">
                                        <svg viewbox="0 0 61 19">
                                            <defs>
                                                <mask id="starmask" x="0" y="0" width="100" height="100">
                                                    <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
                                                    <text text-anchor="middle" x="50%" y="70%" dy="1"> &#x2605;&#x2605;&#x2605;&#x2605;&#x2605;</text>
                                                </mask>
                                            </defs>
                                            <rect x="0" y="0" width="100%" height="100%" mask="url(#starmask)" fill="#fff" fill-opacity="1" />
                                            <text text-anchor="middle" x="50%" y="70%" dy="1" color="black"> &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;</text>
                                        </svg>
                                    </div>
                                    @{ string starWidth2 = ((int)(20 * feedback.Author.FeedbacksMean))+"%"; }
                                    <div class="star-colorbar" style="width: @starWidth2">
                                    </div>
                                </div>
                                <!-- Fine Stelline col rating dell'utente-->

                            </div>
                            <div class="col-md-8">
                                <span style="font-size: 0.7em;">Inviato il: @feedback.DateTime.ToString("dd MMMM yyyy")</span>

                                <span style="float: right; margin-top: -1em;">
                                    <span>Voto:</span>
                                    @for (var i = 0; i < feedback.Vote; i++)
                                    {
                                        <span style="color: orange; font-size: 2em;">&#x2605;</span>
                                    }
                                </span>

                                <div class="panel panel-default">



                                    <div class="panel-body">
                                        @feedback.Text
                                    </div>
                                </div>

                                <div style="font-size: 0.7em; float: right; margin-top: -10px;">Sei d'accordo? Vota!</div>
                            </div>

                            <div class="col-md-1">
                                @if (feedback.AuthorId.Equals(User.GetUserId()) || feedback.ReceiverId.Equals(User.GetUserId()))
                                {
                                    <!-- l'autore sono io oppure sono io il destinatario, non posso autovotarmi, tutti e due colorati -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up"></div>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down"></div>

                                }
                                else if (!feedback.UserFeedbackScores.Any())
                                {
                                    <!-- caso normale non colorati nessuno dei due -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up"></div>
                                    </a>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down"></div>
                                    </a>

                                }
                                else if (feedback.UserFeedbackScores.First().Useful)
                                {
                                    <!-- colora di hover perenne il thumb UP -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up"></div>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down"></div>
                                    </a>
                                }
                                else
                                {
                                    <!-- colora di hover perenne il thumb DOWN -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true">
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up"></div>
                                    </a>

                                    <br />

                                    if (feedback.Usefulness > 0)
                                    {
                                        <p>+@feedback.Usefulness</p>
                                    }
                                    else
                                    {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down"></div>

                                }

                            </div>

                        </div>
                    </div>
                                            }
                                        }

            <h3>I pi&ugrave; recenti</h3>
            if (!GetLastFeedBacks().Any())
            {
                <h4 style="text-align: center">Non ci sono abbastanza feedback utili per questo utente!</h4>
            }
            else
            {
                foreach (var feedback in GetLastFeedBacks())
                {
                    <div class="panel panel-default" >
                        <div class="panel-body" style="padding-bottom: 7px;" >
                            <div class="col-md-1" >
                                <div class="photo message-avatar panel panel-default" >
                                    <img class="img-responsive" src=@feedback.Author.ProfileImageUrl />
                                </div>
                            </div>
                            <div class="col-md-2" style="margin-top: 0.8em;" >
                                <span style="word-wrap :break-word;word-break:break-word"><a href="~/Profile/Index?userId=@feedback.AuthorId">@feedback.Author.UserName</a></span>
                                <!-- Stelline col rating dell'utente (style.css)-->
                                <div class="star-container" >
                                    <div class="star-shape" >
                                        <svg viewbox="0 0 61 19" >
                                            <defs>
                                                <mask id="starmask" x="0" y="0" width="100" height="100" >
                                                    <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
                                                    <text text-anchor="middle" x="50%" y="70%" dy="1" > &#x2605;&#x2605;&#x2605;&#x2605;&#x2605;</text>
                                                </mask>
                                            </defs>
                                            <rect x="0" y="0" width="100%" height="100%" mask="url(#starmask)" fill="#fff" fill-opacity="1" />
                                            <text text-anchor="middle" x="50%" y="70%" dy="1" color="black" > &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;</text>
                                        </svg>
                                    </div>
                                    @{ string starWidth2 = ( (int) ( 20 * feedback.Author.FeedbacksMean ) )+"%"; }
                                    <div class="star-colorbar" style="width: @starWidth2" >
                                    </div>
                                </div>
                                <!-- Fine Stelline col rating dell'utente-->

                            </div>
                            <div class="col-md-8" >
                                <span style="font-size: 0.7em;">Inviato il: @feedback.DateTime.ToString( "dd MMMM yyyy" )</span>

                                <span style="float: right; margin-top: -1em;">
                            <span>Voto:</span>
                            @for( var i = 0; i < feedback.Vote; i++ ) {
                                <span style="color: orange; font-size: 2em;">&#x2605;</span>
                            }
                        </span>

                                <div class="panel panel-default" >



                                    <div class="panel-body" >
                                        @feedback.Text
                                    </div>
                                </div>

                                <div style="font-size: 0.7em; float: right; margin-top: -10px;" >Sei d'accordo? Vota!</div>
                            </div>

                            <div class="col-md-1" >
                                @if(feedback.AuthorId.Equals(User.GetUserId()) || feedback.ReceiverId.Equals(User.GetUserId())) {
                                    <!-- l'autore sono io oppure sono io il destinatario, non posso autovotarmi, tutti e due colorati -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up" ></div>

                                    <br />

                                    if( feedback.Usefulness > 0 ) {
                                        <p>+@feedback.Usefulness</p>
                                    } else {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down" ></div>

                                } else if( !feedback.UserFeedbackScores.Any() ) {
                                    <!-- caso normale non colorati nessuno dei due -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true" >
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up" ></div>
                                    </a>

                                    <br />

                                    if( feedback.Usefulness > 0 ) {
                                        <p>+@feedback.Usefulness</p>
                                    } else {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false" >
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down" ></div>
                                    </a>

                                } else if( feedback.UserFeedbackScores.First().Useful ) {
                                    <!-- colora di hover perenne il thumb UP -->
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-up" ></div>

                                    <br />

                                    if( feedback.Usefulness > 0 ) {
                                        <p>+@feedback.Usefulness</p>
                                    } else {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=false" >
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-down" ></div>
                                    </a>
                                } else {
                                    <!-- colora di hover perenne il thumb DOWN -->
                                    <a href="~/Profile/VoteFeedbackUsefulness?feedbackId=@feedback.Id&useful=true" >
                                        <div class="feedback-thumbs glyphicon glyphicon-thumbs-up" ></div>
                                    </a>

                                    <br />

                                    if( feedback.Usefulness > 0 ) {
                                        <p>+@feedback.Usefulness</p>
                                    } else {
                                        <p>@feedback.Usefulness</p>
                                    }
                                    <div class="feedback-thumbs-permanent-hover glyphicon glyphicon-thumbs-down" ></div>

                                }

                            </div>

                        </div>
                    </div>
                }
            }
        }




    </div>

</div>
