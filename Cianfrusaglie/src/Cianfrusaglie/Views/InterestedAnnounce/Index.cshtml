@model Cianfrusaglie.ViewModels.InterestedAnnounce.InterestedAnnounceViewModel

@{
    ViewData["Title"] = Model.Announce.Title;
}

<div class="panel-body" >
    <div class="panel panel-default" >
        <div class="panel-heading" id="my-conversations" >
            <h3>@ViewData[ "Title" ]</h3>
            @if( ViewData.ContainsKey( "chosenUserId" ) && !Model.Announce.Closed ) {
                <span><a onclick="announceCloseConfirm()">Concludi transazione</a></span>
            } else if( Model.Announce.Closed ) {
                <span>Annuncio chiuso</span>
            }
        </div>

        @if( !Model.InterestedUsers.Any() ) {
            <div class="panel-group" >
                <div class="panel-body" style="text-align: center" >
                    Non ci sono persone interessate a questo Annuncio!
                </div>
            </div>
            
        } else {
            <div class="panel-body" >
                @foreach( var user in Model.InterestedUsers ) {
                    <div class="panel panel-default" >
                        <div class="panel-body" >
                            <div class="form-group" >
                                <div class="col-md-1" >
                                    <div class="photo" >
                                        <img class="img-responsive" src="@user.ProfileImageUrl" />
                                    </div>
                                </div>
                                <div class="col-md-4" >
                                    <h4> @user.UserName</h4>
                                    <!-- Stelline col rating dell'utente (style.css)-->
                                    <div class="star-container" >
                                        <div class="star-shape" >
                                            <svg viewbox="0 0 61 19" >
                                                <defs>
                                                    <mask id="starmask" x="0" y="0" width="100" height="100" >
                                                        <rect x="0" y="0" width="100%" height="100%" fill="#fff" />
                                                        <text text-anchor="middle" x="50%" y="70%" dy="1" > &#x2605;&#x2605;&#x2605;&#x2605;&#x2605;</text>
                                                    </mask>
                                                </defs>
                                                <rect x="0" y="0" width="100%" height="100%" mask="url(#starmask)" fill="#fff" fill-opacity="1" />
                                                <text text-anchor="middle" x="50%" y="70%" dy="1" color="black" > &#x2606;&#x2606;&#x2606;&#x2606;&#x2606;</text>
                                            </svg>
                                        </div>
                                        @{ string starWidth = ( (int) ( 20 * user.FeedbacksMean ) )+"%"; }
                                        <div class="star-colorbar" style="width: @starWidth" >
                                        </div>
                                    </div>
                                    <!-- Fine Stelline col rating dell'utente-->
                                    @($"{user.FeedbacksMean:N1}") su 5 (@user.FeedbacksCount recensioni)
                                </div>
                                <div class="col-md-6" >
                                    <h4><a href="~/Messages/Create/?id=@user.Id" >Contatta</a></h4>

                                    @{
                                        const string chosenuserid = "chosenUserId";
                                    }
                                    @if (ViewData.ContainsKey(chosenuserid))
                                    {
                                        //Check choosen user and set correct labels
                                        if (ViewData[chosenuserid].Equals(user.Id))
                                        {
                                            <h4>Hai scelto questo utente come destinatario!</h4>
                                        }
                                        else {
                                            const string allotherschosenuserid = "allOthersChosenUserId";
                                            var allOthers = (IEnumerable<string>)ViewData[allotherschosenuserid];
                                            if( allOthers.Contains( user.Id ) ) {
                                                <h4>Questo utente non &egrave; pi&ugrave; il destinatario.</h4>

                                            }
                                            else {
                                                <h4><a href="~/InterestedAnnounce/ChooseUserAsReceiverForAnnounce?userId=@user.Id&announceId=@Model.Announce.Id">Scegli come destinatario</a></h4>
                                            }
                                        }

                                        //Check if user has already given feedback to user
                                        const string feedbackgivenusers = "feedbackGivenUsers";
                                        var feedbackGivenUsers = (List<string>)ViewData[feedbackgivenusers];

                                        if (!feedbackGivenUsers.Contains(user.Id))
                                        {

                                            if (ViewData[chosenuserid].Equals(user.Id))
                                            {

                                                <h4>
                                                    <a href="~/Feedback/Create?announceId=@Model.Announce.Id&receiverId=@user.Id" >Scrivi la tua recensione!</a>
                                                </h4>

                                            } else {
                                                const string allotherschosenuserid = "allOthersChosenUserId";
                                                var allOthers = (IEnumerable< string >) ViewData[ allotherschosenuserid ];

                                                if( allOthers.Contains( user.Id ) ) {
                                                    <h4>
                                                        <a href="~/Feedback/Create?announceId=@Model.Announce.Id&receiverId=@user.Id" >Scrivi la tua recensione</a>
                                                    </h4>
                                                }
                                            }

                                        } 
                                    } else {
                                        <h4><a href="~/InterestedAnnounce/ChooseUserAsReceiverForAnnounce?userId=@user.Id&announceId=@Model.Announce.Id" >Scegli come destinatario</a></h4>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

        }
    </div>
</div>

<div id="AnnounceCloseConfirm" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <p>
                    Sicuro di voler concludere la transazione relativa a questo annuncio?
                </p>
            </div>

            <div class="modal-footer">
                <button type="button" data-dismiss="modal" class="btn btn-primary" id="confirmbtn">Conferma</button>
                <button type="button" data-dismiss="modal" class="btn">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script>
    function announceCloseConfirm() {
        $('#AnnounceCloseConfirm').modal({ backdrop : 'static', keyboard : false })
            .one('click', '#confirmbtn', function(err) { window.location.href = "/InterestedAnnounce/Close?id=@Model.Announce.Id"; });
    }
</script>